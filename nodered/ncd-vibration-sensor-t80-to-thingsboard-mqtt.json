[{"id":"8f2ce2ac2127540f","type":"switch","z":"8c51d1a367a55d26","name":"ncd-filter-mode","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"sensor_mode","vt":"str"},{"t":"eq","v":"sensor_data","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":300,"y":680,"wires":[["dca2ee8fb040685d"],["4fb313153c431af8"]]},{"id":"c6d572b0c859dd37","type":"change","z":"8c51d1a367a55d26","name":"ncd-add-battery-to-sensor-data","rules":[{"t":"set","p":"payload.sensor_data.battery_percent","pt":"msg","to":"payload.battery_percent","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":720,"wires":[["af51492f163ecabe"]]},{"id":"4fb313153c431af8","type":"switch","z":"8c51d1a367a55d26","name":"ncd-filter-by-type","property":"payload.sensor_type","propertyType":"msg","rules":[{"t":"eq","v":"80","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":510,"y":700,"wires":[["6f81a48ca6afdda9","c6d572b0c859dd37"]]},{"id":"f03f602fb90b5603","type":"mqtt out","z":"8c51d1a367a55d26","name":"ncd-to-thingsboard","topic":"","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"781cea0d7c2535bc","x":1690,"y":680,"wires":[]},{"id":"dca2ee8fb040685d","type":"switch","z":"8c51d1a367a55d26","name":"ncd-filter-by-run-mode","property":"payload.mode","propertyType":"msg","rules":[{"t":"eq","v":"RUN","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":520,"y":640,"wires":[["0fd11e6056c5e014"]]},{"id":"0fd11e6056c5e014","type":"change","z":"8c51d1a367a55d26","name":"ncd-set-device","rules":[{"t":"set","p":"mac","pt":"msg","to":"$substring(payload.mac,12)","tot":"jsonata"},{"t":"delete","p":"payload","pt":"msg"},{"t":"set","p":"payload.device","pt":"msg","to":"mac","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":720,"y":640,"wires":[["723663e330e62606"]]},{"id":"6f81a48ca6afdda9","type":"function","z":"8c51d1a367a55d26","name":"ncd-attributes","func":"// Retrieve the 'flag' from the context or default to false\nconst flag = context.get(\"flag\") || false;\n\nif (!flag) {\n    // Destructure properties from msg.payload for clarity\n    const {\n        addr,\n        sensor_name: sensorName,\n        firmware,\n        nodeId,\n        sensor_type: sensorType\n    } = msg.payload;\n\n    // Extract the device ID from the address\n    const device = addr.substring(12);\n\n    msg.payload = {\n        [device]: {\n            \"Sensor Name\": sensorName,\n            \"Firmware\": firmware,\n            \"Node ID\": nodeId,\n            \"Sensor Type\": sensorType\n        }\n    };\n\n    // Set the 'flag' in the context to avoid re-execution\n    context.set(\"flag\", true);\n    return msg;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":680,"wires":[["2fc8d8d2c075769d"]]},{"id":"af51492f163ecabe","type":"function","z":"8c51d1a367a55d26","name":"ncd-telemetry","func":"// Destructure relevant properties from msg.payload\nconst { addr, received: timestamp } = msg.payload;\n\n// Extract the device ID from the address\nconst device = addr.substring(12);\n\n// Extract the data from the message\nconst sensor_data = msg.payload.sensor_data;\n\n// Construct the payload in a clean and structured way\nmsg.payload = {\n    [device]: [\n        {\n            ts: timestamp,\n            values: sensor_data\n        }\n    ]\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":720,"wires":[["7282a9ca34e1034e"]]},{"id":"723663e330e62606","type":"change","z":"8c51d1a367a55d26","name":"ncd-set-mqtt-topic-connect","rules":[{"t":"set","p":"topic","pt":"msg","to":"v1/gateway/connect","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1300,"y":640,"wires":[["2604c58c92bc6941"]]},{"id":"2fc8d8d2c075769d","type":"change","z":"8c51d1a367a55d26","name":"ncd-set-mqtt-topic-attributes","rules":[{"t":"set","p":"topic","pt":"msg","to":"v1/gateway/attributes","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1300,"y":680,"wires":[["2604c58c92bc6941"]]},{"id":"7282a9ca34e1034e","type":"change","z":"8c51d1a367a55d26","name":"ncd-set-mqtt-topic-telemetry","rules":[{"t":"set","p":"topic","pt":"msg","to":"v1/gateway/telemetry","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1300,"y":720,"wires":[["2604c58c92bc6941"]]},{"id":"d38aa90ea223abd6","type":"debug","z":"8c51d1a367a55d26","name":"debug thingsboard","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1690,"y":640,"wires":[]},{"id":"2604c58c92bc6941","type":"junction","z":"8c51d1a367a55d26","x":1500,"y":680,"wires":[["d38aa90ea223abd6","f03f602fb90b5603"]]},{"id":"781cea0d7c2535bc","type":"mqtt-broker","name":"","broker":"mqtt.thingsboard.cloud","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]
